/* Animations */
@mixin keyframes($animation-name) {
    @-webkit-keyframes #{$animation-name} {
        @content;
    }
    @-moz-keyframes #{$animation-name} {
        @content;
    }  
    @-ms-keyframes #{$animation-name} {
        @content;
    }
    @-o-keyframes #{$animation-name} {
        @content;
    }  
    @keyframes #{$animation-name} {
        @content;
    }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}

@mixin transform($transforms) {
	-webkit-transform: $transforms;
	-moz-transform: $transforms;
	-ms-transform: $transforms;
	transform: $transforms;
}

@mixin transition($transition) {
	-webkit-transition: $transition;
	-moz-transition: $transition;
	-ms-transition: $transition;
	transition: $transition;
}

@mixin transform-origin($transforms) {
	-webkit-transform-origin: $transforms;
	-moz-transform-origin: $transforms;
	-ms-transform-origin: $transforms;
	transform-origin: $transforms;
}

@mixin clip-path($path) {
	-webkit-clip-path: $path;
	-moz-clip-path: $path;
	-ms-clip-path: $path;
	clip-path: $path;
}
// https://medium.com/developing-with-sass/creating-a-dead-simple-sass-mixin-to-handle-responsive-breakpoints-889927b37740


/* Breakpoints */
@mixin breakpoint($class) {
  @if $class == xxs {
    @media (min-width: 376px) { @content; }
  }

  @else if $class == xs {
    @media (min-width: 576px) { @content; }
  }
 
  @else if $class == sm {
    @media (min-width: 768px) { @content; }
  }
 
  @else if $class == md {
    @media (min-width: 992px) { @content; }
  }
 
  @else if $class == lg {
    @media (min-width: 1200px) { @content; }
  }

  @else if $class == print {
    @media print { @content; }
  }
 
  @else {
    @warn "Breakpoint mixin supports: xs, sm, md, lg, print";
  }
}

/* Layouts */
@mixin column-count($num-cols) {
	-webkit-column-count: $num-cols;
	-moz-column-count: $num-cols;
	-ms-column-count: $num-cols;
	column-count: $num-cols;
}

@mixin break-inside($attr) {
	-webkit-column-break-inside: $attr;
	-moz-break-inside: $attr;
	-ms-column-break-inside: $attr;
	break-inside: $attr;
}

/* Shadow */

@mixin box-shadow($shadow) {
	-webkit-box-shadow: $shadow;
	-moz-box-shadow: $shadow;
	-ms-box-shadow: $shadow;
	box-shadow: $shadow;
}

/* Colors */

//$eggplant: #242444;
$eggplant: #141433;
//$logo-green: #0CC6B1;
$logo-green: #15f0d8;
$hover-green: #0cc6b1;
$white: #FFFFFF;
$black: #333;
$light-grey: #fbfbfb;

$hover-opacity: 0.75;


/* Fonts */

$font-body: 'Nunito', 'Helvetica', sans-serif;
$font-logo: 'Avenir Next', monospace;

$font-size-display: 64px;
$font-size-h1: 48px;
$font-size-h2: 32px;
$font-size-h3: 24px;

$font-size-p: 18px;

$line-height: 24px;


/* Layers */

$layer-0: 0;
$layer-1: 1;
$layer-2: 2;
$layer-top: 1000;


/* Shapes */

$slope: 5%;
